<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Date to Report' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-11-21#'>
        <calculation class='tableau' formula='#2020-11-21#' />
      </column>
    </datasource>
    <datasource caption='SQL for Quadrant Maps' inline='true' name='federated.0okot3b191kts20ztoqx110hasna (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='account.snowflakecomputing.com' name='snowflake.1x85jmj1abqjsx11x1e7h0xy7vwl (copy 2)'>
            <connection authentication='Username Password' class='snowflake' dbname='STARSCHEMA_COVID19' odbc-connect-string-extras='' one-time-sql='' schema='PUBLIC' server='account.snowflakecomputing.com' service='accountadmin' username='username' warehouse='DEMO_WH' workgroup-auth-mode='as-is'>
              <connection-customization class='snowflake' enabled='false' version='18.1'>
                <vendor name='snowflake' />
                <driver name='snowflake' />
                <customizations>
                  <customization name='CAP_CREATE_TEMP_TABLES' value='yes' />
                  <customization name='CAP_ODBC_BIND_DETECT_ALIAS_CASE_FOLDING' value='yes' />
                  <customization name='CAP_SELECT_INTO' value='yes' />
                  <customization name='CAP_SELECT_TOP_INTO' value='yes' />
                  <customization name='CAP_SKIP_CONNECT_VALIDATION' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='yes' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='snowflake.1x85jmj1abqjsx11x1e7h0xy7vwl (copy 2)' name='Custom SQL Query' type='text'><![CDATA[--County Data with Populations, Deaths and Cases
WITH
cases AS (
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_CASES,
    DIV0(COUNTY_CASES,GEOSQL.COUNTY_POPULATION) AS CASES_PER_CAPITA_COUNTY,
    CASES_PER_CAPITA_COUNTY * 100000 AS CASES_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Confirmed')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE
  ORDER BY JHU.FIPS
),
deaths AS(
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_DEATHS,
    DIV0(COUNTY_DEATHS,GEOSQL.COUNTY_POPULATION) AS DEATHS_PER_CAPITA_COUNTY,
    DEATHS_PER_CAPITA_COUNTY * 100000 AS DEATHS_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Deaths')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE, JHU.CASE_TYPE
  ORDER BY JHU.FIPS
)
SELECT
  cases.*,
  deaths.COUNTY_DEATHS,
  deaths.DEATHS_PER_CAPITA_COUNTY,
  deaths.DEATHS_PER_100K
FROM cases
LEFT JOIN deaths on cases.FIPS = deaths.FIPS
WHERE cases.COUNTY <<>> 'unassigned' AND cases.FIPS IS NOT NULL 
  AND cases.PROVINCE_STATE IN ('Alabama','Alaska','Arizona','Arkansas','California'
  ,'Colorado','Connecticut','Delaware','District of Columbia','Florida','Georgia','Hawaii'
  ,'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland'
  ,'Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska'
  ,'Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina'
  ,'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina'
  ,'South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Islands','Virginia'
  ,'Washington','West Virginia','Wisconsin','Wyoming')]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='snowflake.1x85jmj1abqjsx11x1e7h0xy7vwl (copy 2)' name='Custom SQL Query' type='text'><![CDATA[--County Data with Populations, Deaths and Cases
WITH
cases AS (
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_CASES,
    DIV0(COUNTY_CASES,GEOSQL.COUNTY_POPULATION) AS CASES_PER_CAPITA_COUNTY,
    CASES_PER_CAPITA_COUNTY * 100000 AS CASES_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Confirmed')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE
  ORDER BY JHU.FIPS
),
deaths AS(
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_DEATHS,
    DIV0(COUNTY_DEATHS,GEOSQL.COUNTY_POPULATION) AS DEATHS_PER_CAPITA_COUNTY,
    DEATHS_PER_CAPITA_COUNTY * 100000 AS DEATHS_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Deaths')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE, JHU.CASE_TYPE
  ORDER BY JHU.FIPS
)
SELECT
  cases.*,
  deaths.COUNTY_DEATHS,
  deaths.DEATHS_PER_CAPITA_COUNTY,
  deaths.DEATHS_PER_100K
FROM cases
LEFT JOIN deaths on cases.FIPS = deaths.FIPS
WHERE cases.COUNTY <<>> 'unassigned' AND cases.FIPS IS NOT NULL 
  AND cases.PROVINCE_STATE IN ('Alabama','Alaska','Arizona','Arkansas','California'
  ,'Colorado','Connecticut','Delaware','District of Columbia','Florida','Georgia','Hawaii'
  ,'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland'
  ,'Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska'
  ,'Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina'
  ,'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina'
  ,'South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Islands','Virginia'
  ,'Washington','West Virginia','Wisconsin','Wyoming')]]></_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVINCE_STATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PROVINCE_STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_POPULATION</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COUNTY_POPULATION]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY_POPULATION</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_CASES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COUNTY_CASES]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY_CASES</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASES_PER_CAPITA_COUNTY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CASES_PER_CAPITA_COUNTY]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CASES_PER_CAPITA_COUNTY</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASES_PER_100K</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CASES_PER_100K]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CASES_PER_100K</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_DEATHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COUNTY_DEATHS]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY_DEATHS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_PER_CAPITA_COUNTY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_PER_CAPITA_COUNTY]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DEATHS_PER_CAPITA_COUNTY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHS_PER_100K</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHS_PER_100K]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DEATHS_PER_100K</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Window Avg Deaths per 100k' datatype='real' name='[Avg Cases per 100k (copy)_2606669440002064387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([DEATHS_PER_100K]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Quadrant (County Deaths &amp; Cases)' datatype='string' name='[Calculation_2318227957539909634]' role='measure' type='nominal'>
        <calculation class='tableau' formula='//Q1&#10;IF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant I - High Deaths and High Infections&quot;&#10;&#10;//Q2&#10;ELSEIF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant II - High Deaths and Lower Infections&quot;&#10;&#10;//Q3&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant III - Low Deaths and Lower Infections&quot;&#10;&#10;//Q4&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant IV - Low Deaths and Higer Infections&quot;&#10;&#10;//Could Not Classify in Quadrant&#10;ELSE&#10;    &quot;Quadrant Undefined&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of Records' datatype='integer' name='[Calculation_2606669440001863681]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Window Avg Cases per 100k' datatype='real' name='[Calculation_2606669440001953794]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([CASES_PER_100K]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='State PCT Trump' datatype='real' name='[Calculation_2606669440006586372]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [PROVINCE_STATE] : SUM([COUNTY_VOTES_TRUMP]) / SUM([COUNTY_VOTES_TOTAL])}' />
      </column>
      <column caption='County Cases Ratio' datatype='real' default-format='p0.00%' name='[Calculation_470063259889889280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([COUNTY_CASES]) / SUM([COUNTY_POPULATION])' />
      </column>
      <column caption='County Deaths Ratio' datatype='real' default-format='p0.00%' name='[Couty Cases Ratio (copy)_2606669440001085440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([COUNTY_DEATHS]) / SUM([COUNTY_POPULATION])' />
      </column>
      <column datatype='string' name='[PROVINCE_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[_8D40D81B31BD46F59D45181629441E11]' role='measure' type='quantitative' />
      <column-instance column='[Exclusions (COUNTY,PROVINCE_STATE)]' derivation='InOut' name='[io:Exclusions (COUNTY,PROVINCE_STATE):nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
      <column-instance column='[PROVINCE_STATE]' derivation='None' name='[none:PROVINCE_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:4]' pivot='key' type='nominal'>
        <table-calc ordering-field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Calculation_2318227957548281863]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:7]' pivot='key' type='nominal'>
        <table-calc ordering-field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:8]' pivot='key' type='nominal'>
        <table-calc ordering-type='Field'>
          <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
          <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:9]' pivot='key' type='nominal'>
        <table-calc ordering-type='Field'>
          <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
          <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
        </table-calc>
      </column-instance>
      <group hidden='true' name='[Exclusions (COUNTY,IN/OUT(Exclusions (COUNTY,PROVINCE_STATE)),PROVINCE_STATE)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTY:nk]' />
          <groupfilter function='level-members' level='[io:Exclusions (COUNTY,PROVINCE_STATE):nk]' />
          <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (COUNTY,PROVINCE_STATE)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:COUNTY:nk]' />
          <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='PROVINCE_STATE, COUNTY'>
          <field>[PROVINCE_STATE]</field>
          <field>[COUNTY]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/dspezia/Desktop/COVID-19/COVID-19 Quadrant Maps.twb Files/Data/COVID-19 Days to Double.twb Files/federated copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/20/2020 08:16:56 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='SQL for Map (Full w/Elections 2020)' increment-value='%null%' refresh-type='create' rows-inserted='2885' timestamp-start='2020-11-20 20:16:56.650' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FIPS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIPS</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2885</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PROVINCE_STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PROVINCE_STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PROVINCE_STATE</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1209</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_POPULATION</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_POPULATION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_POPULATION</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2252</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_CASES</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_CASES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_CASES</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1474</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CASES_PER_CAPITA_COUNTY</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CASES_PER_CAPITA_COUNTY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CASES_PER_CAPITA_COUNTY</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2321</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CASES_PER_100K</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CASES_PER_100K]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CASES_PER_100K</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2321</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_DEATHS</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_DEATHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_DEATHS</remote-alias>
              <ordinal>8</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>275</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_PER_CAPITA_COUNTY</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DEATHS_PER_CAPITA_COUNTY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_PER_CAPITA_COUNTY</remote-alias>
              <ordinal>9</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1127</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEATHS_PER_100K</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DEATHS_PER_100K]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEATHS_PER_100K</remote-alias>
              <ordinal>10</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1127</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_VOTES_TOTAL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_VOTES_TOTAL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_VOTES_TOTAL</remote-alias>
              <ordinal>11</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2186</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_VOTES_TRUMP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_VOTES_TRUMP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_VOTES_TRUMP</remote-alias>
              <ordinal>12</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2108</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_VOTES_BIDEN</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_VOTES_BIDEN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_VOTES_BIDEN</remote-alias>
              <ordinal>13</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1837</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_PCT_TRUMP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_PCT_TRUMP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_PCT_TRUMP</remote-alias>
              <ordinal>14</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2885</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_PCT_BIDEN</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNTY_PCT_BIDEN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_PCT_BIDEN</remote-alias>
              <ordinal>15</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2885</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_8D40D81B31BD46F59D45181629441E11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_2318227957539909634:nk:4]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Quadrant III - Low Deaths and Lower Infections&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Quadrant IV - Low Deaths and Higer Infections&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quadrant Undefined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quadrant I - High Deaths and High Infections&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quadrant II - High Deaths and Lower Infections&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2318227957539909634:nk:1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Quadrant III - Low Deaths and Lower Infections&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Quadrant IV - Low Deaths and Higer Infections&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quadrant Undefined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quadrant I - High Deaths and High Infections&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quadrant II - High Deaths and Lower Infections&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2318227957539909634:nk:7]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Quadrant III - Low Deaths and Lower Infections&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Quadrant IV - Low Deaths and Higer Infections&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quadrant Undefined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quadrant I - High Deaths and High Infections&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quadrant II - High Deaths and Lower Infections&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2318227957539909634:nk:8]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Quadrant III - Low Deaths and Lower Infections&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Quadrant IV - Low Deaths and Higer Infections&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quadrant Undefined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quadrant I - High Deaths and High Infections&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quadrant II - High Deaths and Lower Infections&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2318227957539909634:nk:9]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Quadrant III - Low Deaths and Lower Infections&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Quadrant IV - Low Deaths and Higer Infections&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quadrant Undefined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quadrant I - High Deaths and High Infections&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quadrant II - High Deaths and Lower Infections&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date to Report' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-11-21#'>
          <calculation class='tableau' formula='#2020-11-21#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_8D40D81B31BD46F59D45181629441E11'>
            <properties context=''>
              <relation connection='snowflake.1x85jmj1abqjsx11x1e7h0xy7vwl (copy 2)' name='Custom SQL Query' type='text'><![CDATA[--County Data with Populations, Deaths and Cases
WITH
cases AS (
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_CASES,
    DIV0(COUNTY_CASES,GEOSQL.COUNTY_POPULATION) AS CASES_PER_CAPITA_COUNTY,
    CASES_PER_CAPITA_COUNTY * 100000 AS CASES_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Confirmed')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE
  ORDER BY JHU.FIPS
),
deaths AS(
  SELECT JHU.FIPS, JHU.PROVINCE_STATE, JHU.COUNTY, JHU.DATE, GEOSQL.COUNTY_POPULATION, 
    SUM(JHU.CASES) AS COUNTY_DEATHS,
    DIV0(COUNTY_DEATHS,GEOSQL.COUNTY_POPULATION) AS DEATHS_PER_CAPITA_COUNTY,
    DEATHS_PER_CAPITA_COUNTY * 100000 AS DEATHS_PER_100K
  FROM STARSCHEMA_COVID19.PUBLIC.JHU_COVID_19 JHU
  LEFT JOIN (
    SELECT LEFT(CBG,5) AS FIPS, SUM(GEO.TOTAL_POPULATION) AS COUNTY_POPULATION
    FROM SAFEGRAPH_SAFEGRAPH_SHARE.PUBLIC.US_POPULATION_BY_SEX_GEO GEO GROUP BY FIPS) GEOSQL
    ON GEOSQL.FIPS = JHU.FIPS
  WHERE JHU.COUNTRY_REGION = 'United States' AND JHU.DATE = <[Parameters].[Parameter 1]> AND JHU.CASE_TYPE IN('Deaths')
  GROUP BY JHU.PROVINCE_STATE, JHU.COUNTY, JHU.FIPS, GEOSQL.COUNTY_POPULATION, JHU.DATE, JHU.CASE_TYPE
  ORDER BY JHU.FIPS
)
SELECT
  cases.*,
  deaths.COUNTY_DEATHS,
  deaths.DEATHS_PER_CAPITA_COUNTY,
  deaths.DEATHS_PER_100K
FROM cases
LEFT JOIN deaths on cases.FIPS = deaths.FIPS
WHERE cases.COUNTY <<>> 'unassigned' AND cases.FIPS IS NOT NULL 
  AND cases.PROVINCE_STATE IN ('Alabama','Alaska','Arizona','Arkansas','California'
  ,'Colorado','Connecticut','Delaware','District of Columbia','Florida','Georgia','Hawaii'
  ,'Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland'
  ,'Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska'
  ,'Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina'
  ,'North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina'
  ,'South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Islands','Virginia'
  ,'Washington','West Virginia','Wisconsin','Wyoming')]]></relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='State Hilighter' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='County Cases vs Death Rates' />
      <command command='tsc:brush'>
        <param name='field-captions' value='PROVINCE_STATE' />
        <param name='target' value='County Cases vs Death Rates' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='County Cases vs Death Rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='SQL for Quadrant Maps' name='federated.0okot3b191kts20ztoqx110hasna (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0okot3b191kts20ztoqx110hasna (copy 2)'>
            <column caption='Window Avg Deaths per 100k' datatype='real' name='[Avg Cases per 100k (copy)_2606669440002064387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([DEATHS_PER_100K]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CASES_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[COUNTY_POPULATION]' role='measure' type='quantitative' />
            <column caption='Quadrant (County Deaths &amp; Cases)' datatype='string' name='[Calculation_2318227957539909634]' role='measure' type='nominal'>
              <calculation class='tableau' formula='//Q1&#10;IF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant I - High Deaths and High Infections&quot;&#10;&#10;//Q2&#10;ELSEIF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant II - High Deaths and Lower Infections&quot;&#10;&#10;//Q3&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant III - Low Deaths and Lower Infections&quot;&#10;&#10;//Q4&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant IV - Low Deaths and Higer Infections&quot;&#10;&#10;//Could Not Classify in Quadrant&#10;ELSE&#10;    &quot;Quadrant Undefined&quot;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Window Avg Cases per 100k' datatype='real' name='[Calculation_2606669440001953794]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([CASES_PER_100K]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[DEATHS_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[PROVINCE_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE]' derivation='None' name='[none:PROVINCE_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASES_PER_100K]' derivation='Sum' name='[sum:CASES_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTY_POPULATION]' derivation='Sum' name='[sum:COUNTY_POPULATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_PER_100K]' derivation='Sum' name='[sum:DEATHS_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Cases per 100k (copy)_2606669440002064387]' derivation='User' name='[usr:Avg Cases per 100k (copy)_2606669440002064387:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:9]' pivot='key' type='nominal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2606669440001953794]' derivation='User' name='[usr:Calculation_2606669440001953794:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2606669440001953794:qk:4]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Avg Cases per 100k (copy)_2606669440002064387:qk:4]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:COUNTY_POPULATION:qk]' />
              <color column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]' />
            </encodings>
            <reference-line axis-column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' z-order='1' />
            <reference-line axis-column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='computation' probability='95' scope='per-table' value-column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='155' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]</rows>
        <cols>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]</cols>
      </table>
      <simple-id uuid='{E6FBCF8F-4577-49CF-A0EC-07C29CAA11DE}' />
    </worksheet>
    <worksheet name='County Cases vs Death Rates Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='SQL for Quadrant Maps' name='federated.0okot3b191kts20ztoqx110hasna (copy 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0okot3b191kts20ztoqx110hasna (copy 2)'>
            <column caption='Window Avg Deaths per 100k' datatype='real' name='[Avg Cases per 100k (copy)_2606669440002064387]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([DEATHS_PER_100K]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[CASES_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Quadrant (County Deaths &amp; Cases)' datatype='string' name='[Calculation_2318227957539909634]' role='measure' type='nominal'>
              <calculation class='tableau' formula='//Q1&#10;IF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant I - High Deaths and High Infections&quot;&#10;&#10;//Q2&#10;ELSEIF (SUM([DEATHS_PER_100K]) &gt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant II - High Deaths and Lower Infections&quot;&#10;&#10;//Q3&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &lt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant III - Low Deaths and Lower Infections&quot;&#10;&#10;//Q4&#10;ELSEIF (SUM([DEATHS_PER_100K]) &lt; WINDOW_AVG(SUM([DEATHS_PER_100K])) AND &#10;SUM([CASES_PER_100K]) &gt; WINDOW_AVG(SUM([CASES_PER_100K]))) THEN&#10;    &quot;Quadrant IV - Low Deaths and Higer Infections&quot;&#10;&#10;//Could Not Classify in Quadrant&#10;ELSE&#10;    &quot;Quadrant Undefined&quot;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Window Avg Cases per 100k' datatype='real' name='[Calculation_2606669440001953794]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([CASES_PER_100K]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[DEATHS_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[PROVINCE_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE]' derivation='None' name='[none:PROVINCE_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASES_PER_100K]' derivation='Sum' name='[sum:CASES_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEATHS_PER_100K]' derivation='Sum' name='[sum:DEATHS_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Cases per 100k (copy)_2606669440002064387]' derivation='User' name='[usr:Avg Cases per 100k (copy)_2606669440002064387:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2318227957539909634]' derivation='User' name='[usr:Calculation_2318227957539909634:nk:9]' pivot='key' type='nominal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2606669440001953794]' derivation='User' name='[usr:Calculation_2606669440001953794:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[PROVINCE_STATE]' />
                <order field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[COUNTY]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Exclusions (COUNTY,PROVINCE_STATE)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:COUNTY:nk]' />
                <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:PROVINCE_STATE:nk]' member='&quot;Alaska&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aleutians East&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aleutians West&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Anchorage&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Bethel&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Denali&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Dillingham&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Fairbanks North Star&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Haines&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Juneau&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Kenai Peninsula&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Ketchikan Gateway&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Kodiak Island&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Kusilvak&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Matanuska-Susitna&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Nome&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;North Slope&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Northwest Arctic&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Petersburg&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Prince of Wales-Hyder&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Sitka&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Skagway&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Southeast Fairbanks&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Valdez-Cordova&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Wrangell&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Yakutat&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Yukon-Koyukuk&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:PROVINCE_STATE:nk]' member='&quot;Hawaii&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Hawaii&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Honolulu&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Kauai&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Maui&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:PROVINCE_STATE:nk]' member='&quot;Puerto Rico&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Adjuntas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aguada&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aguadilla&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aguas Buenas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Aibonito&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Anasco&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Arecibo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Arroyo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Barceloneta&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Barranquitas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Bayamon&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Cabo Rojo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Caguas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Camuy&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Canovanas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Carolina&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Catano&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Cayey&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Ceiba&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Ciales&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Cidra&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Coamo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Comerio&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Corozal&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Culebra&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Dorado&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Fajardo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Guanica&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Guayama&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Guayanilla&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Guaynabo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Gurabo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Hatillo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Hormigueros&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Humacao&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Isabela&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Jayuya&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Juana Diaz&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Juncos&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Lajas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Lares&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Las Marias&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Las Piedras&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Loiza&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Luquillo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Manati&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Maricao&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Maunabo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Mayaguez&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Moca&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Morovis&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Naguabo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Naranjito&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Orocovis&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Patillas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Penuelas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Ponce&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Quebradillas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Rincon&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Rio Grande&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Sabana Grande&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Salinas&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;San German&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;San Juan&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;San Lorenzo&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;San Sebastian&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Santa Isabel&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Toa Alta&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Toa Baja&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Trujillo Alto&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Utuado&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Vega Alta&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Vega Baja&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Vieques&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Villalba&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Yabucoa&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Yauco&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:COUNTY:nk]' />
                  <hierarchy name='[none:PROVINCE_STATE:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]'>
            <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Exclusions (COUNTY,PROVINCE_STATE)]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' />
              <color column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2606669440001953794:qk:4]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Avg Cases per 100k (copy)_2606669440002064387:qk:4]' />
              <geometry column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CA1680AD-DC3C-4044-B8BC-07EBC8DEAA48}' />
    </worksheet>
    <worksheet name='County per 100k Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='SQL for Quadrant Maps' name='federated.0okot3b191kts20ztoqx110hasna (copy 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0okot3b191kts20ztoqx110hasna (copy 2)'>
            <column datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[COUNTY_DEATHS]' role='measure' type='quantitative' />
            <column datatype='real' name='[COUNTY_POPULATION]' role='measure' type='quantitative' />
            <column caption='County Deaths Ratio' datatype='real' default-format='p0.00%' name='[Couty Cases Ratio (copy)_2606669440001085440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COUNTY_DEATHS]) / SUM([COUNTY_POPULATION])' />
            </column>
            <column datatype='real' name='[DEATHS_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[PROVINCE_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE]' derivation='None' name='[none:PROVINCE_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEATHS_PER_100K]' derivation='Sum' name='[sum:DEATHS_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Couty Cases Ratio (copy)_2606669440001085440]' derivation='User' name='[usr:Couty Cases Ratio (copy)_2606669440001085440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Exclusions (COUNTY,PROVINCE_STATE)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:COUNTY:nk]' />
                <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:PROVINCE_STATE:nk]' member='&quot;Alaska&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Anchorage&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Bethel&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Fairbanks North Star&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Juneau&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Kenai Peninsula&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Matanuska-Susitna&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Petersburg&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Prince of Wales-Hyder&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Southeast Fairbanks&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Valdez-Cordova&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Yukon-Koyukuk&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:PROVINCE_STATE:nk]' member='&quot;Hawaii&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Hawaii&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Honolulu&quot;' />
                      <groupfilter function='member' level='[none:COUNTY:nk]' member='&quot;Maui&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:COUNTY:nk]' />
                  <hierarchy name='[none:PROVINCE_STATE:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]'>
            <groupfilter function='level-members' level='[none:PROVINCE_STATE:nk]' />
          </filter>
          <slices>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Exclusions (COUNTY,PROVINCE_STATE)]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]</column>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='100.0' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Couty Cases Ratio (copy)_2606669440001085440:qk]' />
              <geometry column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{47098D7A-4BD2-4DCF-B9B2-4C9300D68BA6}' />
    </worksheet>
    <worksheet name='County per 100k Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='SQL for Quadrant Maps' name='federated.0okot3b191kts20ztoqx110hasna (copy 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0okot3b191kts20ztoqx110hasna (copy 2)'>
            <column datatype='real' name='[CASES_PER_100K]' role='measure' type='quantitative' />
            <column datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[COUNTY_CASES]' role='measure' type='quantitative' />
            <column datatype='real' name='[COUNTY_POPULATION]' role='measure' type='quantitative' />
            <column caption='County Cases Ratio' datatype='real' default-format='p0.00%' name='[Calculation_470063259889889280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([COUNTY_CASES]) / SUM([COUNTY_POPULATION])' />
            </column>
            <column datatype='string' name='[PROVINCE_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE]' derivation='None' name='[none:PROVINCE_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASES_PER_100K]' derivation='Sum' name='[sum:CASES_PER_100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTY_CASES]' derivation='Sum' name='[sum:COUNTY_CASES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTY_POPULATION]' derivation='Sum' name='[sum:COUNTY_POPULATION:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_470063259889889280]' derivation='User' name='[usr:Calculation_470063259889889280:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]'>
            <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:PROVINCE_STATE:nk]' to='&quot;Wyoming&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='4000.0' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' max='23463.0' min='73.0' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:COUNTY_POPULATION:qk]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:COUNTY_CASES:qk]' />
              <tooltip column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_470063259889889280:qk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]' />
              <lod column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]' />
              <geometry column='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6AAC4791-5B2E-48F7-B9DE-18A5774CE72B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='County per 100k Map' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:CASES_PER_100K:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A1619E7-ABD2-4E61-BE85-36F4497371FC}' />
    </window>
    <window class='worksheet' name='County per 100k Deaths' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[sum:DEATHS_PER_100K:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7150BEA9-71A5-4A29-BCA0-DCD27528669D}' />
    </window>
    <window class='worksheet' name='County Cases vs Death Rates' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:Calculation_2318227957548281863:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{615CC00A-585B-46CB-89B9-42A65DA11FD6}' />
    </window>
    <window class='worksheet' name='County Cases vs Death Rates Map' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:COUNTY:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:Calculation_2318227957548281863:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[none:PROVINCE_STATE:nk]</field>
            <field>[federated.0okot3b191kts20ztoqx110hasna (copy 2)].[usr:Calculation_2318227957539909634:nk:9]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8621B919-7C80-4B4F-B7EA-16EFAB3D9418}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County Cases vs Death Rates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='County Cases vs Death Rates Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='County per 100k Deaths' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='County per 100k Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
